/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Clases.Arbol;
import Clases.Coneccion;
import Clases.Router;
import Clases.Usuario;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author toshib
 */
public class VentanaProfundidad extends javax.swing.JFrame {
    Usuario usuarioActual;
    DefaultListModel<String> listModel = new DefaultListModel<>();  
    /**
     * Creates new form VentanaDiagramas
     */
    public VentanaProfundidad(Usuario usuario) {
        
        initComponents();
        this.setLocationRelativeTo(null);
        usuarioActual = usuario;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextFieldProfundidad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(40, 1, 75));

        jButton2.setText("Profundidad");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Amplitud");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Router");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Wi-Fi Router_100px.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldProfundidad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jButton2)
                        .addGap(40, 40, 40)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(35, 35, 35)))
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldProfundidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Amplitud
        listModel.clear();
        amplitud(usuarioActual.registroDeRed.grafo);
        jList1.setModel(listModel);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Profundidad
        if (usuarioActual.registroDeRed.grafo == null) {
            System.out.println("No hay grafo");
        } else {
            listModel.clear();
            Router origen = usuarioActual.getRegistroDeRed().buscarRouter(jTextFieldProfundidad.getText());
            limpiar_marcas();
            profundidad(origen);
            jList1.setModel(listModel);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldProfundidad;
    // End of variables declaration//GEN-END:variables
  
   

    public void limpiar_marcas() {
        //metodo para limpiar las marcas cuando se recorre 
        Router temp = usuarioActual.registroDeRed.grafo;//variable tipo vertice temporal
        if (usuarioActual.registroDeRed.grafo == null)//si aun no se han insertado
        {
            return;//retornamos
        }
        while (temp != null) {//mientras que el temporal sea diferente del final
            temp.setMarca(false);//ponemos la marca igual a falso
            temp = temp.getSigRouter();//avanzamos al siguiente vertice
        }
    }

    
    
 

    int saltosTotales = 9999;//variable de saltos

    public void minimoSaltos(Router origen, Router destino, int saltos) {
        //metodo para calcular los saltos
        if ((origen == null) | (origen.isMarca())) {//si el origen = null o la marca del origen = verdadera
            return;
        }//retornamos
        else {//si no
            origen.setMarca(true); //hacemos la marca verdadera
            Coneccion aux = origen.getSigConeccion();//creamos un auxiliar que es igual al siguiente del origen
            while (aux != null)//mientras que auxiliar sea diferente de null
            {
                saltos++;//aumentamos la variable saltos
                if ((aux.getDestino() == destino) & (saltos < saltosTotales)) {//si el destino del auxiliar = destino que recibimos 
                    saltosTotales = saltos;//& si saltos es menos que saltos totales
                    //guardamos el valor de saltos
                }
                minimoSaltos(aux.getDestino() , destino, saltos);//se llama recursivo con el valor de destino de auxiliar , el destino y los saltos
                aux = aux.getSigConeccion();//movemos la  variable auxiliar al valor del siguiente arco
            }
        }
    }
    public void profundidad(Router grafo){
        //metodo que imprime el inicio en profundidad
        //vertice temp = inicio;
        if ((grafo == null) | (grafo.isMarca())) {
            return;
        } else {
            grafo.setMarca( true);
            Coneccion aux = grafo.getSigConeccion();
            while (aux != null) {
                listModel.addElement("Arco: " + grafo.getId());
                listModel.addElement("Peso: " + aux.getTiempo());
                listModel.addElement("Destino: " + aux.getDestino().getId());
                listModel.addElement("*******************************************" );
                profundidad(aux.getDestino());
                aux = aux.getSigConeccion();
            }
        }
    }
    public void amplitud(Router grafo)// metodo para imprimir el inicio en amplitud
    {
        if (grafo == null) {
            System.out.println("No hay grafo");
        } else {
            Router temp = grafo;
            while (temp != null) {
                listModel.addElement("Vertice: " + temp.getId());
                Coneccion aux = temp.getSigConeccion();
                while (aux != null) {
                    //listModel.addElement("Peso: " + aux.peso);
                    listModel.addElement("Destino: " + aux.getDestino().getId());
                    aux = aux.getSigConeccion();
                }
                listModel.addElement("-----------");
                temp = temp.getSigRouter();
            }
        }
    }
}
